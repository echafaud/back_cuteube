"""add video table and mini update user table (add relationship and columns lenght limits)

Revision ID: 897824faa9b7
Revises: a22bcf79c7b4
Create Date: 2023-05-02 02:41:19.009815

"""
import fastapi_users_db_sqlalchemy
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '897824faa9b7'
down_revision = 'a22bcf79c7b4'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('video',
                    sa.Column('id', fastapi_users_db_sqlalchemy.generics.GUID(), nullable=False),
                    sa.Column('title', sa.String(length=60), nullable=False),
                    sa.Column('description', sa.String(length=340), nullable=False),
                    sa.Column('upload_at', sa.TIMESTAMP(), nullable=False),
                    sa.Column('author', fastapi_users_db_sqlalchemy.generics.GUID(), nullable=False),
                    sa.ForeignKeyConstraint(['author'], ['user.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.alter_column('user', 'registered_at',
                    existing_type=postgresql.TIMESTAMP(),
                    nullable=False)
    op.create_unique_constraint(None, 'user', ['username'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'user', type_='unique')
    op.alter_column('user', 'registered_at',
                    existing_type=postgresql.TIMESTAMP(),
                    nullable=True)
    op.drop_table('video')
    # ### end Alembic commands ###
